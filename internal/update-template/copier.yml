_min_copier_version: "9.0"
_subdirectory: .

# Internal maintainer utility: update one existing template directory with current common assets.

target_template:
  type: str
  help: Name of the template directory under templates/ to refresh (e.g. gist, sst, typescript)

overwrite_mode:
  type: str
  choices:
    - overwrite
    - skip
  default: overwrite
  help: Overwrite existing files or skip them

_message_after_copy: |
  Updated template '{{ target_template }}' with all common assets.

_tasks:
  - >-
    bash -c '
    set -euo pipefail; T="{{ target_template }}";
    if [ ! -d templates/$T ]; then echo "Template directory templates/$T not found" >&2; exit 1; fi;
    RSYNC_BASE=(rsync -a --exclude README.md);
    {% if overwrite_mode == 'skip' %} RSYNC_BASE+=(--ignore-existing); {% endif %}
    # Always copy ALL common artifacts
    mkdir -p templates/$T/.github/chatmodes;
    mkdir -p templates/$T/.github/instructions;
    mkdir -p templates/$T/.github/prompts;
    mkdir -p templates/$T/.vscode/mcp;
    "${RSYNC_BASE[@]}" common/.github/chatmodes/ templates/$T/.github/chatmodes/;
    "${RSYNC_BASE[@]}" common/.github/instructions/ templates/$T/.github/instructions/;
    "${RSYNC_BASE[@]}" common/.github/prompts/ templates/$T/.github/prompts/;
    "${RSYNC_BASE[@]}" common/.vscode/mcp/ templates/$T/.vscode/mcp/;
    # Copy root-level VS Code config files if present
    for f in mcp.json settings.json; do
      if [ -f common/.vscode/$f ]; then
        mkdir -p templates/$T/.vscode;
        cp -f common/.vscode/$f templates/$T/.vscode/
      fi
    done;
    echo "Done updating $T."'
